
@WebServlet(name = "CustomerServlet", urlPatterns = "/jjjjjjjj")
public class CustomerServlet extends HttpServlet {
    CustomerService customerService = new CustomerService();
    CustomerTypeService customerTypeService = new CustomerTypeService();

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String action = request.getParameter("action");
        if (action == null) {
            action = "";
        }
        System.out.println("+__+__+__+__+ " + action);
        switch (action) {
            case "create":
                saveCustomer(request, response);
                break;
            case "update":
                updateCustomer(request, response);
                break;
            default:
                getPageListUser(request, response);
                break;

        }

    }


    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String action = request.getParameter("action");
        if (action == null) {
            action = "";
        }
        System.out.println("+__+__+__+__+ " + action);
        switch (action) {
            case "create":
                getPageCreateCustomer(request, response);
                break;
            case "update":
                getPageUpdateCustomer(request, response);
                break;
            case "remove":
                removeCustomer(request, response);
                break;
            default:
                getPageListUser(request, response);
                break;

        }
    }




    private void removeEmployee(HttpServletRequest request, HttpServletResponse response) {
        int id = Integer.parseInt(request.getParameter("id"));
        employeeService.removeEmployeeById(id);
        try {
            response.sendRedirect("/employee");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //__+__+__+__+__+__+__+__+__+__+__+__+__
    private void getPageUpdateEmployee(HttpServletRequest request, HttpServletResponse response) {
        int id = Integer.parseInt(request.getParameter("id"));
        Employee employee = employeeService.selectEmployeeById(id);
        request.setAttribute("employee", employee);
        List<Position> positionList = positionService.selectAllPosition();
        request.setAttribute("positionList", positionList);

        List<Degree> degreeList = degreeService.selectAllDegree();
        request.setAttribute("degreeList", degreeList);

        List<Division> divisionList = divisionService.selectAllDivision();
        request.setAttribute("divisionList", divisionList);

        List<User> userList = userService.selectAllUser();
        request.setAttribute("userList", userList);
        Lib.forwardToJSP(request,response,"view/updateEmployee.jsp" );

    }

    //        RequestDispatcher dispatcher = request.getRequestDispatcher();
//        try {
//            dispatcher.forward(request, response);
//        } catch (ServletException | IOException e) {
//            e.printStackTrace();
//        }

    //__+__+__+__+__+__+__+__+__+__+__+__+__
    private void saveEmployee(HttpServletRequest request, HttpServletResponse response) {
        int id = Integer.parseInt(request.getParameter("id"));
        String name = request.getParameter("name");
        String birthday = request.getParameter("birthday");
        String idCard = request.getParameter("idCard");
        double salary = Double.parseDouble(request.getParameter("salary"));
        String phone = request.getParameter("phone");
        String email = request.getParameter("email");
        String address = request.getParameter("address");
        int positionId = Integer.parseInt(request.getParameter("positionId"));
        int degreeId = Integer.parseInt(request.getParameter("degreeId"));
        int divisionId = Integer.parseInt(request.getParameter("divisionId"));
        String userName = request.getParameter("userName");

        Employee employee = new Employee(id, name, birthday, idCard, salary, phone,
                email, address, positionId, degreeId, divisionId, userName);
        employeeService.insertEmployeeSql(employee);
        try {
            response.sendRedirect("/employee");
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("method saveEmployee; occur error");
        }

    }

    //__+__+__+__+__+__+__+__+__+__+__+__+__
    private void getPageCreateEmployee(HttpServletRequest request, HttpServletResponse response) {
        List<Position> positionList = positionService.selectAllPosition();
        request.setAttribute("positionList", positionList);

        List<Degree> degreeList = degreeService.selectAllDegree();
        request.setAttribute("degreeList", degreeList);

        List<Division> divisionList = divisionService.selectAllDivision();
        request.setAttribute("divisionList", divisionList);

        List<User> userList = userService.selectAllUser();
        request.setAttribute("userList", userList);

        RequestDispatcher dispatcher = request.getRequestDispatcher("view/createEmployee.jsp");
        try {
            dispatcher.forward(request, response);
        } catch (ServletException | IOException e) {
            e.printStackTrace();
        }

    }

    //__+__+__+__+__+__+__+__+__+__+__+__+__
    private void getPageListEmployee(HttpServletRequest request, HttpServletResponse response) {
        List<Employee> employeeList = employeeService.selectAllEmployee();
        request.setAttribute("employeeList", employeeList);
        RequestDispatcher dispatcher = request.getRequestDispatcher("view/listEmployee.jsp");
        try {
            dispatcher.forward(request, response);
        } catch (ServletException | IOException e) {
            e.printStackTrace();
        }
    }
